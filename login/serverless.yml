service: tome

frameworkVersion: '3'

plugins:
  - serverless-iam-roles-per-function

provider:
  name: aws
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  stackName: tome-${opt:stage, 'dev'}
  deploymentMethod: direct
  runtime: python3.11
  config: ${file(../config/${opt:stage, 'dev'}.yml)}

custom:
  env: ${self:provider.config.env}
  prefix: tome-${self:custom.env}
  userTable: ${self:custom.prefix}-userTable

package:
  individually: true
  patterns:
    - '!./**'
  
functions:
  loginService:
    name: ${self:custom.prefix}-loginService
    description: this is a test function
    handler: lambdas/loginService.handler
    package:
      patterns:
        - lambdas/loginService.py
        - lambdas/utils.py
    timeout: 6
    memorySize: 128
    environment:
      LOG_LEVEL: logging.INFO
      USER_TABLE: ${self:custom.userTable}
    iamRoleStatementsName: ${self:custom.prefix}-login-role
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:*
        Resource: 
          - arn:aws:dynamodb:${self:provider.config.region}:${self:provider.config.account}:table/${self:custom.userTable}
          - arn:aws:dynamodb:${self:provider.config.region}:${self:provider.config.account}:table/${self:custom.userTable}/*


resources:

  Resources:

    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTable}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    # gateway:
    #   Type: AWS::ApiGateway::RestApi

